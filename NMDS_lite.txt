
NMDS: in code (Reciprocal)
===
class:midcenter

![reciprocal](images/Reciprocal.pdf)i


NMDS: in quick theory
===

- Number of dimensions are selected
- Distance matrix is calculated
- Samples are positioned
- Distance betwen the rank order in the higher and lower dinmensions are calculated
  - Stress
- Positions are moved to be better
- This continues until stress is at a minimum

NMDS: in practice
===

![wizard corgi](images/wizard_corgi.jpg)

---

- The magic is in the metric
- By default you only get 2 dimensions

NMDS: in code (Bray-curtis)
===
class:small-code

```{r, eval=FALSE}
# Make proportional
nmds.data = sweep( data, 2, colSums( data ), "/")

# Perform NMDS with Bray Curtis distance metric
nmds.b.c.result = metaMDS( comm=t(nmds.data), distance="bray", k=2, autotransfer=FALSE, trymax=10)
```

NMDS: in code (Bray-curtis)
===
class:small-code

```{r, echo=FALSE}
# Make proportional
nmds.data = sweep( data, 2, colSums( data ), "/")

# Perform NMDS with Bray Curtis distance metric
nmds.b.c.result = metaMDS( comm=t(nmds.data), distance="bray", k=2, autotransfer=FALSE, trymax=10)
```

NMDS: in code (Bray-curtis)
===
class:small-code

```{r, eval=FALSE}
# Plot NMDS with Bray-curtis
plot( nmds.b.c.result$points[,1], nmds.b.c.result$points[,2], main="Ordination by Bray Curtis", xlab="NMDS 1", ylab="NMDS 2")
```

NMDS: in code (Bray-curtis)
===
class:midcenter

```{r, echo=FALSE}
plot( nmds.b.c.result$points[,1], nmds.b.c.result$points[,2], main="Ordination by Bray Curtis", xlab="NMDS 1", ylab="NMDS 2")
```

NMDS: in code (Binomial)
===
class:small-code

```{r}
# Perform NMDS with binomial metric
nmds.b.result = metaMDS( comm=t(nmds.data), distance="binomial", k=2, autotransfer=FALSE, trymax=10)
```

NMDS: in code (Reciprocal)
===
class:midcenter

![reciprocal](images/Reciprocal.pdf)

NMDS: in code (Binomial)
===
class:small-code

```{r, eval=FALSE}
# Plot and add legend
plot( nmds.b.result$points[,1], nmds.b.result$points[,2], main="Ordination by Binomial", xlab="NMDS 1", ylab="NMDS 2")
```

NMDS: in code (Binomial)
===
class:midcenter

```{r, echo=FALSE}
plot( nmds.b.result$points[,1], nmds.b.result$points[,2], main="Ordination by Binomial", xlab="NMDS 1", ylab="NMDS 2" )
```

